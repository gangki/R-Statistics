labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) %>%
theme(plot.subtitle = element_text(family = "malgun", face="bold"))
# ggplot으로 그리기
ggplot(df_Nile1, aes(x = year, y = Nile)) +
geom_line(size = 1, color = 'red') +
ggtitle('Nile강의 연도별 유량 변화') +
labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) %>%
theme(plot.subtitle = element_text(family = "malgun", face="bold"))
# ggplot으로 그리기
ggplot(df_Nile1, aes(x = year, y = Nile)) +
geom_line(size = 1, color = 'red') +
ggtitle('Nile강의 연도별 유량 변화') +
labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) %>%
theme(axis.title = element_text(family = "malgun", face="bold"))
# ggplot으로 그리기
ggplot(df_Nile1, aes(x = year, y = Nile)) +
geom_line(size = 1, color = 'red') +
ggtitle('Nile강의 연도별 유량 변화') +
labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) %>%
theme(axis.title = element_text(family = "malgun", face="bold"))
# ggplot으로 그리기
ggplot(df_Nile1, aes(x = year, y = Nile)) +
geom_line(size = 1, color = 'red') +
ggtitle('Nile강의 연도별 유량 변화') +
labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) +
theme(axis.title = element_text(family = "malgun", face="bold"))
# ggplot으로 그리기
ggplot(df_Nile1, aes(x = year, y = Nile)) +
geom_line(size = 1, color = 'red') +
ggtitle('Nile강의 연도별 유량 변화') +
labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) +
theme(axis.title = element_text(family = "malgun", face="bold", size=5))
# ggplot으로 그리기
ggplot(df_Nile1, aes(x = year, y = Nile)) +
geom_line(size = 1, color = 'red') +
ggtitle('Nile강의 연도별 유량 변화') +
labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) +
theme(axis.title = element_text(family = "malgun", face="bold", size=10))
# ggplot으로 그리기
ggplot(df_Nile1, aes(x = year, y = Nile)) +
geom_line(size = 1, color = 'red') +
ggtitle('Nile강의 연도별 유량 변화') +
labs(x = '연도', y = '유량') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) +
theme(axis.title = element_text(family = "malgun", face="bold", size=15))
data
# 예제 2-2 막대그래프와 히스토그램
tableV5 <- table(data$V5)
tableV5
# 막대 그래프
barplot(tableV5,
main = '출생아(남자)별 빈도', xlab = '출생아수', ylab = '빈도')
str(tableV5)
# 막대 그래프 ggplot
df_tableV5 <- as.data.frame(tableV5)
df_tableV5
ggplot(tableV5, aes(Var1, Freq, fill = Var1)+
geom_col())
ggplot(df_tableV5, aes(Var1, Freq, fill = Var1)+
geom_col())
ggplot(df_tableV5, aes(Var1, Freq, fill = Var1) + geom_col())
df_tableV5
str(df_tableV5)
ggplot(df_tableV5, aes(Var1, Freq) + geom_col())
ggplot(df_tableV5, aes(x = Var1, y = Freq) + geom_col())
ggplot(df_tableV5, aes(x = Var1, y = Freq)) + geom_col()
ggplot(df_tableV5, aes(Var1, Freq)) + geom_col()
ggplot(df_tableV5, aes(Var1, Freq, fill = Var1)) + geom_col()
ggplot(df_tableV5, aes(Var1, Freq, fill = Var1)) +
geom_col() +
ggtitle('출생아(남자)별 빈도') +
labs(x = '출생아수', y = '빈도')
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) +
theme(axis.title = element_text(family = "malgun", face="bold", size=15))
ggplot(df_tableV5, aes(Var1, Freq, fill = Var1)) +
geom_col() +
ggtitle('출생아(남자)별 빈도') +
labs(x = '출생아수', y = '빈도') +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) +
theme(axis.title = element_text(family = "malgun", face="bold", size=15))
data$V2
# 히스토그램
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
# 히스토그램 ggplot
str(data$V2)
ggplot(data$V2) + geom_histogram()
df_dataV2 <- table(data$V2)
df_dataV2
dataV2 <- table(data$V2)
df_dataV2 <- as.data.frame(dataV2)
df_dataV2
str(df_dataV2)
ggplot(df_dataV2, aes(Var1, Freq)) +
geom_histogram()
ggplot(df_dataV2, aes(Var1, Freq)) +
geom_histogram()
ggplot(df_dataV2, aes(Var1)) +
geom_histogram()
ggplot(df_dataV2, aes(x = Var1)) +
geom_histogram()
head(df_dataV2)
ggplot(df_dataV2, aes(x = Var1)) +
geom_histogram()
# 히스토그램 ggplot
str(data$V2)
df_dataV2_1 <- as.data.frame(data$V2)
df_dataV2_1
str(df_dataV2_1)
head(df_dataV2_1)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram()
# 히스토그램
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
# 히스토그램 ggplot
df_dataV2 <- as.data.frame(data$V2)
str(df_dataV2)
head(df_dataV2)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram()
# 히스토그램
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram()
# 히스토그램
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 0.5)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 1)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 0)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 2)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 3)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 4)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
par(mflow=c(1,2))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
par(mflow=c(1,2))
# 히스토그램
par(mfrow = c(1, 2))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
# 히스토그램
par(mfrow = c(1, 2))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
par(mfrow = c(1, 2))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
# 히스토그램 ggplot
df_dataV2 <- as.data.frame(data$V2)
str(df_dataV2)
head(df_dataV2)
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
# 히스토그램
par(mfrow = c(1, 2))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
par(mfrow = c(1, 2))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
par(mfrow = c(1, 2))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
par(mfrow = c(1, 2))
plot(cars$speed, cars$dist,
main = '속도와 제동거리', xlab = '속도(mph)', ylab = '제동거리(ft)',
pch = 1, col = 'red')
plot(jitter(cars$speed), jitter(cars$dist),
main = '속도와 제동거리', xlab = '속도(mph)', ylab = '제동거리(ft)',
pch = 1, col = 'red')
par(mfrow = c(1, 1))
plot(cars$speed, cars$dist,
main = '속도와 제동거리', xlab = '속도(mph)', ylab = '제동거리(ft)',
pch = 1, col = 'red')
plot(jitter(cars$speed), jitter(cars$dist),
main = '속도와 제동거리', xlab = '속도(mph)', ylab = '제동거리(ft)',
pch = 1, col = 'red')
# 예제 2-1 두 변수 간의 관계를 나타내는 산점도
par(mfrow = c(1, 2))
plot(cars$speed, cars$dist,
main = '속도와 제동거리', xlab = '속도(mph)', ylab = '제동거리(ft)',
pch = 1, col = 'red')
plot(jitter(cars$speed), jitter(cars$dist),
main = '속도와 제동거리', xlab = '속도(mph)', ylab = '제동거리(ft)',
pch = 1, col = 'red')
plot(jitter(cars$speed), jitter(cars$dist),
main = '속도와 제동거리', xlab = '속도(mph)', ylab = '제동거리(ft)',
pch = 1, col = 'red')
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
library(gridExtra)
p1 <- hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
p1
par(mfrow = c(1, 1))
p1 <- hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
p2 <- ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
p2
grid.arrange(p1, p2, ncol=2)
p2 <- ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
p1 <- hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
p2 <- ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
p2
p1
p2
p1 <- hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
p2 <- ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10)
p2
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
scale_x_continuous(breaks = c(1:9))
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10) +
scale_x_continuous(breaks = c(1:9))
scale_x_continuous(breaks = c(seq(0, 90))
scale_x_continuous(breaks = c(seq(0, 90, 10))
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10) +
scale_x_continuous(breaks = c(seq(0, 90, 10)))
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10) +
scale_x_continuous(breaks = c(seq(0, 90, 20)))
hist(data$V2, breaks = c(seq(0, 90, 10)), right = F,
main = '연령별 분포', xlab = '연령', ylab = '빈도')
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10) +
scale_x_continuous(breaks = c(seq(0, 90, 20)))
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10) +
ggtitle('연령별 분포') +
labs(x = '연령', y = '빈도') +
scale_x_continuous(breaks = c(seq(0, 90, 20)))
ggplot(df_dataV2_1, aes(data$V2)) +
geom_histogram(fill = '#F8766D', color = 'black', binwidth = 10) +
ggtitle('연령별 분포') +
labs(x = '연령', y = '빈도') +
scale_x_continuous(breaks = c(seq(0, 90, 20))) +
theme(plot.title = element_text(family = "malgun", face="bold", size=20, vjust=2, hjust = 0.5, color="darkblue")) +
theme(axis.title = element_text(family = "malgun", face="bold", size=15))
# 예제 2-3 원도표
pie(table(data$V4), main = '학력수준별 비중', cex = 0.8)
data$V4
df_dataV4 <- as.data.frame(data$V4)
head(df_dataV4)
str(df_dataV4)
df_dataV4 <- as.data.frame(table(data$V4))
str(df_dataV4)
head(df_dataV4)
ggplot(df_dataV4, aes(x = '', y = Freq, fill = Var1)) +
geome_bar(stat = 'identity')
ggplot(df_dataV4, aes(x = '', y = Freq, fill = Var1)) +
geom_bar(stat = 'identity')
# 예제 2-3 원도표
pie(table(data$V4), main = '학력수준별 비중', cex = 0.8)
ggplot(df_dataV4, aes(x = '', y = Freq, fill = Var1)) +
geom_bar(stat = 'identity')
ggplot(df_dataV4, aes(x = '', y = Freq, fill = Var1)) +
geom_bar(stat = 'identity') +
coord_polar(y)
ggplot(df_dataV4, aes(x = '', y = Freq, fill = Var1)) +
geom_bar(stat = 'identity') +
coord_polar(theta = 'y')
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
ggplot(df_dataV4, aes(x = '', y = Freq, fill = Var1)) +
geom_bar(stat = 'identity') +
coord_polar(theta = 'y')
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
df_dataV4
options(digits = 2)
df_dataV4
options(digits = 1)
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
df_dataV4
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange(desc(Freq))
df_dataV4
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
coord_polar(theta = 'y')
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity')
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange(desc(Freq))
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity')
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange(desc(pct))
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity')
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange(desc(Freq))
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity')
# hiphop.txt 파일을 가지고 다음 문제를 해결하여 파워포인트 파일로 제출하시오.
# 1. 워드 클라우드 만들기
setwd("D:/Workspace/R-Lecture/Part2/Stage2_Graph/연습문제")
library(KoNLP)
library("tm")
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
# 한글 전처리
data1 <- readLines("hiphop.txt")
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
head(unlist(data2), 30)
data3 <- unlist(data2)
data3 <- Filter(function(x) {nchar(x) >= 2} ,data3)
txt <- readLines("hiphop_gsub.txt")
cnt_txt <- length(txt)
cnt_txt
i <- 1
for( i in 1:cnt_txt) {
data3 <-gsub((txt[i]),"",data3)
}
write(unlist(data3), "hiphop_2.txt")
wordcount <- table(data3)
head(sort(wordcount, decreasing = T), 10)
#영어 전처리
data_1 <- readLines("hiphop_2.txt")
corp1 <- VCorpus(VectorSource(data_1))
inspect(corp1)
tdm <- TermDocumentMatrix(corp1)
m <- as.matrix(tdm)
corp2 <- tm_map(corp1, stripWhitespace)
corp2 <- tm_map(corp2, tolower)
corp2 <- tm_map(corp2, removeNumbers)
corp2 <- tm_map(corp2, removePunctuation)
corp2 <- tm_map(corp2, PlainTextDocument)
sword2 <- c(stopwords('en'), "and", "but", "not", "’m", "’re", "em", "ma", "don", "toda", "gir", "ban", "ba", "wa", "da", "bab", "tha", "worl","wron", "fl", "yah")
corp2 <- tm_map(corp2, removeWords, sword2)
dataframe <- data.frame(text=unlist(sapply(corp2, `[`, "content")), stringsAsFactors=F)
write.table(dataframe,"hiphop_3.txt", row.names=FALSE)
keyword <- read.table("hiphop_3.txt")
wordcount_2 <- table(keyword)
head(sort(wordcount_2, decreasing = T), 100)
palete <- brewer.pal(9,"Set1")
wordcloud(names(wordcount_2), freq=wordcount_2, scale=c(5,1), rot.per=0.25, min.freq=3,
random.order=F, random.color=T, colors=palete)
legend(0.3,1,"Hip-hop Key word", cex=0.8, fill=NA, border=NA, bg="white",
text.col="red", text.font=2, box.col="red")
# 2. Top 10 단어에 대해서 원 그래프 만들기 (ggplot 사용할 것)
top10 <- head(sort(wordcount_2, decreasing=T),10)
str(top10)
df_top10 <- as.data.frame(top10)
str(df_top10)
options(digits = 2) # 전체 옵션, .O 쓰겠다
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(keyword, "\n", "(", sprintf("%4.1f", pct), '%',")", sep = '')) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange(desc(Freq))
ggplot(df_top10, aes(x='', y=pct, fill=keyword)) +
geom_bar(width=1, stat='identity') +
ggtitle("Hip-hop Key word") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_polar("y", start = 0) +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
# 3. Top 10 단어에 대해서 막대 그래프 만들기 (ggplot 사용할 것)
df_top10 <- df_top10 %>%
mutate(ylabel = paste(keyword, "(", sprintf("%4.1f", pct), '%',")"))
ggplot(df_top10, aes(x='', y=pct, fill=keyword)) +
geom_bar(width=1, stat='identity') +
ggtitle("Hip-hop Key word") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
df_top10 <- df_top10 %>%
mutate(ylabel = paste(keyword, "(", sprintf("%4.1f", pct), '%',")"))
ggplot(df_top10, aes(x='', y=pct, fill=keyword)) +
geom_bar(width=1, stat='identity') +
ggtitle("Hip-hop Key word") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
df_dataV4
str(df_dataV4)
str(df_dataV4$Var1)
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity')
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(keyword, "\n", "(", sprintf("%4.1f", pct), '%',")", sep = '')) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange((Freq))
ggplot(df_top10, aes(x='', y=pct, fill=keyword)) +
geom_bar(width=1, stat='identity') +
ggtitle("Hip-hop Key word") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_polar("y", start = 0) +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange((Freq))
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity')
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
df_dataV4
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange(desc(Freq))
df_dataV4
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
df_dataV4 <- df_dataV4 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(Var1, '\n', '(', sprintf("%4.1f", pct), '%', ')', sep = '' )) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct) %>%
arrange(desc(Freq))
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
df_dataV4
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') + coord_flip() +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
ggplot(df_dataV4, aes(x = Var1, y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
ggplot(df_dataV4, aes(x = reorder(Var1, -Freq), y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1, order = pct)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
ggplot(df_dataV4, aes(x = '', y = pct, fill = Var1)) +
geom_bar(stat = 'identity') +
geom_text(aes(y = ypos, label = ylabel), color = 'black')
